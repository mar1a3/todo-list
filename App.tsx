
import React, { MouseEventHandler, PropsWithChildren, useState } from 'react';
import './styles/main.css';
import myImage from './styles/1.jpg';


interface Task{
  id:number;
  text:string;
  isChecked:boolean;
}


const App: React.FC =() =>{

//—Å–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–ª–∞—Å—å –∫–∞–∫-—Ç–æ –ø–æ —É—Ä–æ–¥—Å–∫–∏ –∑–∞–ª–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É. —Ç–∞–∫ –≤–æ–æ–±—â–µ –¥–µ–ª–∞—é—Ç?
    // const [image, setImage] = React.useState([
    //   {id:1, src: './styles/1.jpg'}
    // ]);
    // const handleDeleteImage = ()=>{
    //   setImage([]);
    // }

  const [image, setImage] = React.useState(true);
  //—Ç–µ–∫—Å—Ç –∏–∑ –∏–Ω–ø—É—Ç–∞
  const [inputValue, setInputValue] = React.useState<string>('');
  //—Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
  const [tasks, setTask] = React.useState<{ [key:number]:Task }>({});
  //–ø—Ä–æ–≤–µ—Ä—è—é, –µ—Å—Ç—å –ª–∏ –≥–∞–ª–æ—á–∫–∞ –Ω–∞ —á–µ–∫–±–æ–∫—Å–µ
  const [isChecked, setIsChecked] = React.useState<boolean>(false)

  const handleInput: React.ChangeEventHandler<HTMLInputElement>=(e)=>{
    setInputValue(e.target.value);
  }

  const addTask =(e: React.SyntheticEvent) =>{
    e.preventDefault();
    if(inputValue){
      //—á—Ç–æ–±—ã —Å–Ω–µ–≥–µ—Ä–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π id (–º–± –Ω–µ –Ω–∞–¥–æ —ç—Ç–æ ü•¥)
      const taskId = Date.now();
      setTask((prevTasks)=>({
        ...prevTasks,
        [taskId]: {id:taskId, text: inputValue, isChecked:false}
      }))
      // setTask([...tasks,inputValue]);
      setInputValue('');
      setImage(false);
    }
  }

    const handleCheckbox = (taskId:number) =>{
      setTask((prevTasks) => ({
        ...prevTasks,
        [taskId]: { ...prevTasks[taskId], isChecked: !prevTasks[taskId].isChecked },
      }));
    }

  return (
    <div className="App">
      <h1>
        <div className="title">Todo list</div>
    </h1>
      <form action="">
        <input type="text" value={inputValue} onChange={handleInput} name = "message" placeholder="Type the task"></input>
        <button onClick={addTask} className="add">add</button>
        </form>
        {image && <div className='img-field'>You don't have any tasks yet üò¨<img src={myImage} alt="Description" />
          {/* {image.map((img)=>(
            <div key = {img.id}>
              <img src={img.src} alt={`Image ${img.id}`} />
            </div>
          ))} */}
        </div>}
        <div className="tasks">
            {Object.values(tasks).map((task)=>(
              <div key={task.id} className="task">
                {/* –µ—Å–ª–∏ —á–µ–∫–±–æ–∫—Å —Å –≥–∞–ª–∫–æ–π, —Ç–æ –∫—Ä–∞—à—É –∏–Ω–ø—É—Ç –∫–ª–∞—Å—Å–æ–º done */}
                <p className={task.isChecked ? "done": ''}>{task.text}</p>
                <input type="checkbox" checked={task.isChecked} onChange={()=>handleCheckbox(task.id)} className="arrow" />
                </div>
            ))}
        </div>
  </div>
    
)
}

export default App;
