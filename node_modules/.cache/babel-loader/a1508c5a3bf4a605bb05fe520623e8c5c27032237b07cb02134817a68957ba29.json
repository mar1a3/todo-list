{"ast":null,"code":"/* eslint-disable no-param-reassign */\nimport { removeCSS, updateCSS } from \"./Dom/dynamicCSS\";\nvar cached;\nfunction measureScrollbarSize(ele) {\n  var randomId = \"rc-scrollbar-measure-\".concat(Math.random().toString(36).substring(7));\n  var measureEle = document.createElement('div');\n  measureEle.id = randomId;\n\n  // Create Style\n  var measureStyle = measureEle.style;\n  measureStyle.position = 'absolute';\n  measureStyle.left = '0';\n  measureStyle.top = '0';\n  measureStyle.width = '100px';\n  measureStyle.height = '100px';\n  measureStyle.overflow = 'scroll';\n\n  // Clone Style if needed\n  var fallbackWidth;\n  var fallbackHeight;\n  if (ele) {\n    var targetStyle = getComputedStyle(ele);\n    measureStyle.scrollbarColor = targetStyle.scrollbarColor;\n    measureStyle.scrollbarWidth = targetStyle.scrollbarWidth;\n\n    // Set Webkit style\n    var webkitScrollbarStyle = getComputedStyle(ele, '::-webkit-scrollbar');\n\n    // Try wrap to handle CSP case\n    try {\n      updateCSS(\"\\n     #\".concat(randomId, \"::-webkit-scrollbar {\\n        width: \").concat(webkitScrollbarStyle.width, \";\\n        height: \").concat(webkitScrollbarStyle.height, \";\\n     }\\n    \"), randomId);\n    } catch (e) {\n      // Can't wrap, just log error\n      console.error(e);\n\n      // Get from style directly\n      fallbackWidth = parseInt(webkitScrollbarStyle.width, 10);\n      fallbackHeight = parseInt(webkitScrollbarStyle.height, 10);\n    }\n  }\n  document.body.appendChild(measureEle);\n\n  // Measure. Get fallback style if provided\n  var scrollWidth = ele && fallbackWidth && !isNaN(fallbackWidth) ? fallbackWidth : measureEle.offsetWidth - measureEle.clientWidth;\n  var scrollHeight = ele && fallbackHeight && !isNaN(fallbackHeight) ? fallbackHeight : measureEle.offsetHeight - measureEle.clientHeight;\n\n  // Clean up\n  document.body.removeChild(measureEle);\n  removeCSS(randomId);\n  return {\n    width: scrollWidth,\n    height: scrollHeight\n  };\n}\nexport default function getScrollBarSize(fresh) {\n  if (typeof document === 'undefined') {\n    return 0;\n  }\n  if (fresh || cached === undefined) {\n    cached = measureScrollbarSize();\n  }\n  return cached.width;\n}\nexport function getTargetScrollBarSize(target) {\n  if (typeof document === 'undefined' || !target || !(target instanceof Element)) {\n    return {\n      width: 0,\n      height: 0\n    };\n  }\n  return measureScrollbarSize(target);\n}","map":{"version":3,"names":["removeCSS","updateCSS","cached","measureScrollbarSize","ele","randomId","concat","Math","random","toString","substring","measureEle","document","createElement","id","measureStyle","style","position","left","top","width","height","overflow","fallbackWidth","fallbackHeight","targetStyle","getComputedStyle","scrollbarColor","scrollbarWidth","webkitScrollbarStyle","e","console","error","parseInt","body","appendChild","scrollWidth","isNaN","offsetWidth","clientWidth","scrollHeight","offsetHeight","clientHeight","removeChild","getScrollBarSize","fresh","undefined","getTargetScrollBarSize","target","Element"],"sources":["C:/Users/smirn/OneDrive/Рабочий стол/works/todo-list/node_modules/rc-util/es/getScrollBarSize.js"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport { removeCSS, updateCSS } from \"./Dom/dynamicCSS\";\nvar cached;\nfunction measureScrollbarSize(ele) {\n  var randomId = \"rc-scrollbar-measure-\".concat(Math.random().toString(36).substring(7));\n  var measureEle = document.createElement('div');\n  measureEle.id = randomId;\n\n  // Create Style\n  var measureStyle = measureEle.style;\n  measureStyle.position = 'absolute';\n  measureStyle.left = '0';\n  measureStyle.top = '0';\n  measureStyle.width = '100px';\n  measureStyle.height = '100px';\n  measureStyle.overflow = 'scroll';\n\n  // Clone Style if needed\n  var fallbackWidth;\n  var fallbackHeight;\n  if (ele) {\n    var targetStyle = getComputedStyle(ele);\n    measureStyle.scrollbarColor = targetStyle.scrollbarColor;\n    measureStyle.scrollbarWidth = targetStyle.scrollbarWidth;\n\n    // Set Webkit style\n    var webkitScrollbarStyle = getComputedStyle(ele, '::-webkit-scrollbar');\n\n    // Try wrap to handle CSP case\n    try {\n      updateCSS(\"\\n     #\".concat(randomId, \"::-webkit-scrollbar {\\n        width: \").concat(webkitScrollbarStyle.width, \";\\n        height: \").concat(webkitScrollbarStyle.height, \";\\n     }\\n    \"), randomId);\n    } catch (e) {\n      // Can't wrap, just log error\n      console.error(e);\n\n      // Get from style directly\n      fallbackWidth = parseInt(webkitScrollbarStyle.width, 10);\n      fallbackHeight = parseInt(webkitScrollbarStyle.height, 10);\n    }\n  }\n  document.body.appendChild(measureEle);\n\n  // Measure. Get fallback style if provided\n  var scrollWidth = ele && fallbackWidth && !isNaN(fallbackWidth) ? fallbackWidth : measureEle.offsetWidth - measureEle.clientWidth;\n  var scrollHeight = ele && fallbackHeight && !isNaN(fallbackHeight) ? fallbackHeight : measureEle.offsetHeight - measureEle.clientHeight;\n\n  // Clean up\n  document.body.removeChild(measureEle);\n  removeCSS(randomId);\n  return {\n    width: scrollWidth,\n    height: scrollHeight\n  };\n}\nexport default function getScrollBarSize(fresh) {\n  if (typeof document === 'undefined') {\n    return 0;\n  }\n  if (fresh || cached === undefined) {\n    cached = measureScrollbarSize();\n  }\n  return cached.width;\n}\nexport function getTargetScrollBarSize(target) {\n  if (typeof document === 'undefined' || !target || !(target instanceof Element)) {\n    return {\n      width: 0,\n      height: 0\n    };\n  }\n  return measureScrollbarSize(target);\n}"],"mappings":"AAAA;AACA,SAASA,SAAS,EAAEC,SAAS,QAAQ,kBAAkB;AACvD,IAAIC,MAAM;AACV,SAASC,oBAAoBA,CAACC,GAAG,EAAE;EACjC,IAAIC,QAAQ,GAAG,uBAAuB,CAACC,MAAM,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC;EACtF,IAAIC,UAAU,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC9CF,UAAU,CAACG,EAAE,GAAGT,QAAQ;;EAExB;EACA,IAAIU,YAAY,GAAGJ,UAAU,CAACK,KAAK;EACnCD,YAAY,CAACE,QAAQ,GAAG,UAAU;EAClCF,YAAY,CAACG,IAAI,GAAG,GAAG;EACvBH,YAAY,CAACI,GAAG,GAAG,GAAG;EACtBJ,YAAY,CAACK,KAAK,GAAG,OAAO;EAC5BL,YAAY,CAACM,MAAM,GAAG,OAAO;EAC7BN,YAAY,CAACO,QAAQ,GAAG,QAAQ;;EAEhC;EACA,IAAIC,aAAa;EACjB,IAAIC,cAAc;EAClB,IAAIpB,GAAG,EAAE;IACP,IAAIqB,WAAW,GAAGC,gBAAgB,CAACtB,GAAG,CAAC;IACvCW,YAAY,CAACY,cAAc,GAAGF,WAAW,CAACE,cAAc;IACxDZ,YAAY,CAACa,cAAc,GAAGH,WAAW,CAACG,cAAc;;IAExD;IACA,IAAIC,oBAAoB,GAAGH,gBAAgB,CAACtB,GAAG,EAAE,qBAAqB,CAAC;;IAEvE;IACA,IAAI;MACFH,SAAS,CAAC,UAAU,CAACK,MAAM,CAACD,QAAQ,EAAE,wCAAwC,CAAC,CAACC,MAAM,CAACuB,oBAAoB,CAACT,KAAK,EAAE,qBAAqB,CAAC,CAACd,MAAM,CAACuB,oBAAoB,CAACR,MAAM,EAAE,iBAAiB,CAAC,EAAEhB,QAAQ,CAAC;IAC7M,CAAC,CAAC,OAAOyB,CAAC,EAAE;MACV;MACAC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;;MAEhB;MACAP,aAAa,GAAGU,QAAQ,CAACJ,oBAAoB,CAACT,KAAK,EAAE,EAAE,CAAC;MACxDI,cAAc,GAAGS,QAAQ,CAACJ,oBAAoB,CAACR,MAAM,EAAE,EAAE,CAAC;IAC5D;EACF;EACAT,QAAQ,CAACsB,IAAI,CAACC,WAAW,CAACxB,UAAU,CAAC;;EAErC;EACA,IAAIyB,WAAW,GAAGhC,GAAG,IAAImB,aAAa,IAAI,CAACc,KAAK,CAACd,aAAa,CAAC,GAAGA,aAAa,GAAGZ,UAAU,CAAC2B,WAAW,GAAG3B,UAAU,CAAC4B,WAAW;EACjI,IAAIC,YAAY,GAAGpC,GAAG,IAAIoB,cAAc,IAAI,CAACa,KAAK,CAACb,cAAc,CAAC,GAAGA,cAAc,GAAGb,UAAU,CAAC8B,YAAY,GAAG9B,UAAU,CAAC+B,YAAY;;EAEvI;EACA9B,QAAQ,CAACsB,IAAI,CAACS,WAAW,CAAChC,UAAU,CAAC;EACrCX,SAAS,CAACK,QAAQ,CAAC;EACnB,OAAO;IACLe,KAAK,EAAEgB,WAAW;IAClBf,MAAM,EAAEmB;EACV,CAAC;AACH;AACA,eAAe,SAASI,gBAAgBA,CAACC,KAAK,EAAE;EAC9C,IAAI,OAAOjC,QAAQ,KAAK,WAAW,EAAE;IACnC,OAAO,CAAC;EACV;EACA,IAAIiC,KAAK,IAAI3C,MAAM,KAAK4C,SAAS,EAAE;IACjC5C,MAAM,GAAGC,oBAAoB,CAAC,CAAC;EACjC;EACA,OAAOD,MAAM,CAACkB,KAAK;AACrB;AACA,OAAO,SAAS2B,sBAAsBA,CAACC,MAAM,EAAE;EAC7C,IAAI,OAAOpC,QAAQ,KAAK,WAAW,IAAI,CAACoC,MAAM,IAAI,EAAEA,MAAM,YAAYC,OAAO,CAAC,EAAE;IAC9E,OAAO;MACL7B,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE;IACV,CAAC;EACH;EACA,OAAOlB,oBAAoB,CAAC6C,MAAM,CAAC;AACrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}