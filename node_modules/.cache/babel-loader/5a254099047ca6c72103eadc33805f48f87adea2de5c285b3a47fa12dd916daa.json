{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smirn\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\works\\\\react little projects\\\\todo-list (new)\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './styles/main.css';\nimport myImage from './styles/1.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  //—Å–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–ª–∞—Å—å –∫–∞–∫-—Ç–æ –ø–æ —É—Ä–æ–¥—Å–∫–∏ –∑–∞–ª–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É. —Ç–∞–∫ –≤–æ–æ–±—â–µ –¥–µ–ª–∞—é—Ç?\n  // const [image, setImage] = React.useState([\n  //   {id:1, src: './styles/1.jpg'}\n  // ]);\n  // const handleDeleteImage = ()=>{\n  //   setImage([]);\n  // }\n\n  const [image, setImage] = React.useState(true);\n  //—Ç–µ–∫—Å—Ç –∏–∑ –∏–Ω–ø—É—Ç–∞\n  const [inputValue, setInputValue] = React.useState('');\n  //—Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á\n  const [tasks, setTask] = React.useState({});\n  //–ø—Ä–æ–≤–µ—Ä—è—é, –µ—Å—Ç—å –ª–∏ –≥–∞–ª–æ—á–∫–∞ –Ω–∞ —á–µ–∫–±–æ–∫—Å–µ\n  const [isChecked, setIsChecked] = React.useState(false);\n  const handleInput = e => {\n    setInputValue(e.target.value);\n  };\n  const addTask = e => {\n    e.preventDefault();\n    if (inputValue) {\n      //—á—Ç–æ–±—ã —Å–Ω–µ–≥–µ—Ä–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π id (–º–± –Ω–µ –Ω–∞–¥–æ —ç—Ç–æ ü•¥)\n      const taskId = Date.now();\n      setTask(prevTasks => ({\n        ...prevTasks,\n        [taskId]: {\n          id: taskId,\n          text: inputValue,\n          isChecked: false\n        }\n      }));\n      // setTask([...tasks,inputValue]);\n      setInputValue('');\n      setImage(false);\n    }\n  };\n  const handleCheckbox = taskId => {\n    setTask(prevTasks => ({\n      ...prevTasks,\n      [taskId]: {\n        ...prevTasks[taskId],\n        isChecked: !prevTasks[taskId].isChecked\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Todo list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInput,\n        name: \"message\",\n        placeholder: \"Type the task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        className: \"add\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-field\",\n      children: [\"You don't have any tasks yet \\uD83D\\uDE2C\", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: myImage,\n        alt: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks\",\n      children: Object.values(tasks).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: task.isChecked ? 'done' : '',\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.isChecked,\n          onChange: () => handleCheckbox(task.id),\n          className: \"arrow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"TzVD48ac0rWN0tDhE6vK9zR4A1A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","myImage","jsxDEV","_jsxDEV","App","_s","image","setImage","useState","inputValue","setInputValue","tasks","setTask","isChecked","setIsChecked","handleInput","e","target","value","addTask","preventDefault","taskId","Date","now","prevTasks","id","text","handleCheckbox","className","children","fileName","_jsxFileName","lineNumber","columnNumber","action","type","onChange","name","placeholder","onClick","src","alt","Object","values","map","task","checked","_c","$RefreshReg$"],"sources":["C:/Users/smirn/OneDrive/–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª/works/react little projects/todo-list (new)/src/App.tsx"],"sourcesContent":["import React, { MouseEventHandler, PropsWithChildren, useState } from 'react';\nimport './styles/main.css';\nimport myImage from './styles/1.jpg';\n\ninterface Task {\n    id: number;\n    text: string;\n    isChecked: boolean;\n}\n\nconst App: React.FC = () => {\n    //—Å–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–ª–∞—Å—å –∫–∞–∫-—Ç–æ –ø–æ —É—Ä–æ–¥—Å–∫–∏ –∑–∞–ª–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É. —Ç–∞–∫ –≤–æ–æ–±—â–µ –¥–µ–ª–∞—é—Ç?\n    // const [image, setImage] = React.useState([\n    //   {id:1, src: './styles/1.jpg'}\n    // ]);\n    // const handleDeleteImage = ()=>{\n    //   setImage([]);\n    // }\n\n    const [image, setImage] = React.useState(true);\n    //—Ç–µ–∫—Å—Ç –∏–∑ –∏–Ω–ø—É—Ç–∞\n    const [inputValue, setInputValue] = React.useState<string>('');\n    //—Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á\n    const [tasks, setTask] = React.useState<{ [key: number]: Task }>({});\n    //–ø—Ä–æ–≤–µ—Ä—è—é, –µ—Å—Ç—å –ª–∏ –≥–∞–ª–æ—á–∫–∞ –Ω–∞ —á–µ–∫–±–æ–∫—Å–µ\n    const [isChecked, setIsChecked] = React.useState<boolean>(false);\n\n    const handleInput: React.ChangeEventHandler<HTMLInputElement> = e => {\n        setInputValue(e.target.value);\n    };\n\n    const addTask = (e: React.SyntheticEvent) => {\n        e.preventDefault();\n        if (inputValue) {\n            //—á—Ç–æ–±—ã —Å–Ω–µ–≥–µ—Ä–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π id (–º–± –Ω–µ –Ω–∞–¥–æ —ç—Ç–æ ü•¥)\n            const taskId = Date.now();\n            setTask(prevTasks => ({\n                ...prevTasks,\n                [taskId]: { id: taskId, text: inputValue, isChecked: false },\n            }));\n            // setTask([...tasks,inputValue]);\n            setInputValue('');\n            setImage(false);\n        }\n    };\n\n    const handleCheckbox = (taskId: number) => {\n        setTask(prevTasks => ({\n            ...prevTasks,\n            [taskId]: {\n                ...prevTasks[taskId],\n                isChecked: !prevTasks[taskId].isChecked,\n            },\n        }));\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>\n                <div className=\"title\">Todo list</div>\n            </h1>\n            <form action=\"\">\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={handleInput}\n                    name=\"message\"\n                    placeholder=\"Type the task\"\n                ></input>\n                <button onClick={addTask} className=\"add\">\n                    add\n                </button>\n            </form>\n            {image && (\n                <div className=\"img-field\">\n                    You don't have any tasks yet üò¨\n                    <img src={myImage} alt=\"Description\" />\n                    {/* {image.map((img)=>(\n            <div key = {img.id}>\n              <img src={img.src} alt={`Image ${img.id}`} />\n            </div>\n          ))} */}\n                </div>\n            )}\n            <div className=\"tasks\">\n                {Object.values(tasks).map(task => (\n                    <div key={task.id} className=\"task\">\n                        {/* –µ—Å–ª–∏ —á–µ–∫–±–æ–∫—Å —Å –≥–∞–ª–∫–æ–π, —Ç–æ –∫—Ä–∞—à—É –∏–Ω–ø—É—Ç –∫–ª–∞—Å—Å–æ–º done */}\n                        <p className={task.isChecked ? 'done' : ''}>\n                            {task.text}\n                        </p>\n                        <input\n                            type=\"checkbox\"\n                            checked={task.isChecked}\n                            onChange={() => handleCheckbox(task.id)}\n                            className=\"arrow\"\n                        />\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}