{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smirn\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\works\\\\todo-list\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './styles/main.css';\nimport myImage from './styles/1.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [image, setImage] = React.useState(true);\n  const [inputValue, setInputValue] = React.useState('');\n  const [tasks, setTask] = React.useState({});\n  // const [isChecked, setIsChecked] = React.useState<boolean>(false);\n\n  const handleInput = e => {\n    setInputValue(e.target.value);\n  };\n  const addTask = e => {\n    e.preventDefault();\n    if (inputValue) {\n      const taskId = Math.random();\n      setTask(prevTasks => ({\n        ...prevTasks,\n        [taskId]: {\n          id: taskId,\n          text: inputValue,\n          isChecked: false\n        }\n      }));\n      setInputValue('');\n      setImage(false);\n    }\n  };\n  const handleCheckbox = taskId => {\n    setTask(prevTasks => ({\n      ...prevTasks,\n      [taskId]: {\n        ...prevTasks[taskId],\n        isChecked: !prevTasks[taskId].isChecked\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Todo list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInput,\n        name: \"message\",\n        placeholder: \"Type the task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        className: \"add\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-field\",\n      children: [\"You don't have any tasks yet \\uD83D\\uDE2C\", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: myImage,\n        alt: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks\",\n      children: Object.values(tasks).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: task.isChecked ? 'done' : '',\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.isChecked,\n          onChange: () => handleCheckbox(task.id),\n          className: \"arrow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"f2OjSoAtbFJP7X8YaRfYPY9cows=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","myImage","jsxDEV","_jsxDEV","App","_s","image","setImage","useState","inputValue","setInputValue","tasks","setTask","handleInput","e","target","value","addTask","preventDefault","taskId","Math","random","prevTasks","id","text","isChecked","handleCheckbox","className","children","fileName","_jsxFileName","lineNumber","columnNumber","action","type","onChange","name","placeholder","onClick","src","alt","Object","values","map","task","checked","_c","$RefreshReg$"],"sources":["C:/Users/smirn/OneDrive/Рабочий стол/works/todo-list/src/App.tsx"],"sourcesContent":["import React, { MouseEventHandler, PropsWithChildren, useState } from 'react';\nimport './styles/main.css';\nimport myImage from './styles/1.jpg';\n\ninterface Task {\n    id: number;\n    text: string;\n    isChecked: boolean;\n}\n\nconst App: React.FC = () => {\n\n    const [image, setImage] = React.useState(true);\n    const [inputValue, setInputValue] = React.useState<string>('');\n    const [tasks, setTask] = React.useState<{ [key: number]: Task }>({});\n    // const [isChecked, setIsChecked] = React.useState<boolean>(false);\n\n    const handleInput: React.ChangeEventHandler<HTMLInputElement> = e => {\n        setInputValue(e.target.value);\n    };\n\n    const addTask = (e: React.SyntheticEvent) => {\n        e.preventDefault();\n        if (inputValue) {\n            const taskId = Math.random();\n            setTask(prevTasks => ({\n                ...prevTasks,\n                [taskId]: { id: taskId, text: inputValue, isChecked: false },\n            }));\n            setInputValue('');\n            setImage(false);\n        }\n    };\n\n    const handleCheckbox = (taskId: number) => {\n        setTask(prevTasks => ({\n            ...prevTasks,\n            [taskId]: {\n                ...prevTasks[taskId],\n                isChecked: !prevTasks[taskId].isChecked,\n            },\n        }));\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>\n                <div className=\"title\">Todo list</div>\n            </h1>\n            <form action=\"\">\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={handleInput}\n                    name=\"message\"\n                    placeholder=\"Type the task\"\n                ></input>\n                <button onClick={addTask} className=\"add\">\n                    add\n                </button>\n            </form>\n            {image && (\n                <div className=\"img-field\">\n                    You don't have any tasks yet 😬\n                    <img src={myImage} alt=\"Description\" />\n                </div>\n            )}\n            <div className=\"tasks\">\n                {Object.values(tasks).map(task => (\n                    <div key={task.id} className=\"task\">\n                        <p className={task.isChecked ? 'done' : ''}>\n                            {task.text}\n                        </p>\n                        <input\n                            type=\"checkbox\"\n                            checked={task.isChecked}\n                            onChange={() => handleCheckbox(task.id)}\n                            className=\"arrow\"\n                        />\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}